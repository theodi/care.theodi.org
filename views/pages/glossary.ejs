<!-- views/pages/auth.ejs -->
<%- include('../partials/header') %>
<style>
    .navigation {
        display: flex;
        justify-content: space-between;
        padding: 10px;
    }
    .letter {
        cursor: pointer;
        background-color: #f0f0f0;
        padding: 10px 20px;
    }
    .letter.active {
        background-color: #2b98eb;
        color: #fff;
    }
    .content {
        display: flex;
        flex-wrap: wrap;
    }
    .section {
        padding: 10px;
        width: 95%;
        text-align: center;
    }
    section .item {
        border: 1px solid #ccc;
        margin: 20px;
        padding: 20px;
    }
    .section h2 {
        text-align: center;
        margin-top: 10px;
    }
    input {
        width: 80%;
        height: 43px;
        padding-inline: 10px;
        font-size: 16px;
        box-shadow: #64646f33 0 7px 29px;
        margin-top: 1.25rem;
        background-color: transparent;
        color: black;
        border: 2px solid rgba(30 64 175);
        margin-left: auto;
        margin-right: auto;
        border-radius: 0px;
    }
</style>
<section class="content-block light-blue">
    <div class="navigation">
        <% Object.keys(data).forEach(letter => { %>
            <div class="letter" onclick="filter('<%= letter %>')" data-letter='<%= letter %>'><%= letter %></div>
        <% }); %>
    </div>
    <input type="search" id="filterInput" placeholder="Type to filter terms" oninput="filterTerms(this.value)">
    <div class="content">
        <% Object.keys(data).forEach(letter => { %>
            <div id="<%= letter %>" class="section" style="display: block;">
                <h2><%= letter %></h2>
                <% data[letter].forEach(item => { %>
                    <div class="item" data-title="<%= item.title %>">
                        <h3><%= item.title %></h3>
                        <p><%= item.description %></p>
                    </div>
                <% }); %>
            </div>
        <% }); %>
    </div>
</section>
<script>
function filter(letter) {
    const sections = document.querySelectorAll('.section');
    const activeLetter = document.querySelector('.letter.active');

    if (activeLetter && activeLetter.innerText === letter) {
        // If the clicked letter is already active, show all sections
        sections.forEach(section => {
            section.style.display = 'block';
        });
        // Remove active class from all letters
        const letters = document.querySelectorAll('.letter');
        letters.forEach(l => {
            l.classList.remove('active');
        });
    } else {
        // Filter sections by the clicked letter
        sections.forEach(section => {
            if (section.id === letter) {
                section.style.display = 'block';
            } else {
                section.style.display = 'none';
            }
        });
        // Remove active class from all letters
        const letters = document.querySelectorAll('.letter');
        letters.forEach(l => {
            l.classList.remove('active');
        });
        // Add active class to the clicked letter
        const clickedLetter = document.querySelector('.letter[data-letter="' + letter + '"]');
        clickedLetter.classList.add('active');
    }
}
// Function to filter terms based on user input
function filterTerms(inputValue) {
    // Convert input value to lowercase for case-insensitive filtering
    const searchTerm = inputValue.toLowerCase();
    const items = document.querySelectorAll('.item');
    const sections = document.querySelectorAll('.section');
    items.forEach(item => {
        const title = item.dataset.title.toLowerCase(); // Get the title from the data-title attribute
        // Check if the title contains the search term
        if (title.includes(searchTerm)) {
            item.style.display = 'block';
            const sectionId = `${item.closest('.section').id}`;
            document.getElementById(sectionId).style.display = 'block'; // Show section
        } else {
            item.style.display = 'none';
        }
    });
    // Hide sections with no visible items
    sections.forEach(section => {
        const visibleItems = section.querySelectorAll('.item[style="display: block;"]');
        if (visibleItems.length === 0) {
            section.style.display = 'none'; // Hide section
        } else {
            section.style.display = 'block';
        }
    });
}

</script>
<%- include('../partials/footer') %>